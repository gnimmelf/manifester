{"version":3,"sources":["lib/jwt.js"],"names":["googleapis","require","GSA","authClient","auth","JWT","SA","client_email","private_key","authorize","err","tokens","console","log","drive","version","files","list","q","data","module","exports"],"mappings":";;AAAA;;;;;;;;;;;;;;;;AAgBA,IAAIA,aAAaC,QAAQ,YAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;AAeA;AACA,IAAIC,MAAMD,QAAQ,qBAAR,CAAV;;AAEA,IAAIE,aAAa,IAAIH,WAAWI,IAAX,CAAgBC,GAApB;AACb;AACAC,GAAGC,YAFU,EAGb,IAHa,EAIbD,GAAGE,WAJU,EAKb,CAAC,gDAAD,CALa,CAAjB;;AAOAL,WAAWM,SAAX,CAAqB,UAASC,GAAT,EAAcC,MAAd,EAAsB;AACzC,MAAID,GAAJ,EAAS;AACPE,YAAQC,GAAR,CAAYH,GAAZ;AACA;AACD;AACDE,UAAQC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AAEA,MAAIG,QAAQd,WAAWc,KAAX,CAAiB,EAAEC,SAAS,IAAX,EAAiBX,MAAMD,UAAvB,EAAjB,CAAZ;AACAW,QAAME,KAAN,CAAYC,IAAZ,CAAiB;AACfC,OAAG;AADY,GAAjB,EAEG,UAASR,GAAT,EAAcS,IAAd,EAAoB;AACrB,QAAIT,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACA;AACD;AACD;AACAE,YAAQC,GAAR,CAAY,cAAZ;AACAD,YAAQC,GAAR,CAAYM,IAAZ;AACD,GAVD;AAYD,CApBD;;AAsBAC,OAAOC,OAAP,GAAiBlB,UAAjB","file":"jwt.js","sourcesContent":["/**\n * Copyright 2014 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar googleapis = require('googleapis');\n\n/**\n * The JWT authorization is ideal for performing server-to-server\n * communication without asking for user consent.\n *\n * Suggested reading for Admin SDK users using service accounts:\n * https://developers.google.com/admin-sdk/directory/v1/guides/delegation\n *\n * Note on the private_key.pem:\n * Node.js currently does not support direct access to the keys stored within\n * PKCS12 file (see issue comment\n * https://github.com/joyent/node/issues/4050#issuecomment-8816304)\n * so the private key must be extracted and converted to a passphrase-less\n * RSA key: openssl pkcs12 -in key.p12 -nodes -nocerts > key.pem\n */\n\n// Google Service Account details\nvar GSA = require('./g_service_account');\n\nvar authClient = new googleapis.auth.JWT(\n    /* function JWT(email, keyFile, key, scopes, person, [..]) */\n    SA.client_email,     \n    null,\n    SA.private_key,\n    ['https://www.googleapis.com/auth/drive.readonly']);\n\nauthClient.authorize(function(err, tokens) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n  console.log('SUCCESS', tokens)\n\n  var drive = googleapis.drive({ version: 'v3', auth: authClient });  \n  drive.files.list({\n    q: \"'0B4gB3nV9reGKdEpDWXlpcFpUQ3M' in parents\",\n  }, function(err, data) {\n    if (err) {\n      console.log(err);\n      return;\n    }\n    // Loop files and get urls\n    console.log('------------');\n    console.log(data);\n  }) \n\n});\n\nmodule.exports = authClient;"]}